<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apache camel on Jetoile</title>
    <link>https://blog.jetoile.fr/tags/apache-camel/</link>
    <description>Recent content in apache camel on Jetoile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#39;http://creativecommons.org/licenses/by/4.0/&#39; rel=&#39;license&#39;&gt;&lt;img alt=&#39;Licence Creative Commons&#39; src=&#39;https://blog.jetoile.fr/images/creative_common88x31.png&#39; style=&#39;border-width:0&#39;/&gt;&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 15 Mar 2010 23:29:48 +0100</lastBuildDate><atom:link href="https://blog.jetoile.fr/tags/apache-camel/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring Integration vs. Apache Camel</title>
      <link>https://blog.jetoile.fr/2010/03/spring-integration-vs-apache-camel/</link>
      <pubDate>Mon, 15 Mar 2010 23:29:48 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2010/03/spring-integration-vs-apache-camel/</guid>
      <description>Lors d&amp;rsquo;un post précédent, j&amp;rsquo;avais parlé des EIPs (Enterprise Integration Patterns) en expliquant qu&amp;rsquo;il s&amp;rsquo;agissait de Patterns permettant de normaliser les échanges de messages dans un système asynchrone.
Dans cet article, je vais tenter de présenter succinctement deux de ses implémentations : Spring Integration et [Apache Camel](https://camel.apache.org/.
En fait, pour être plus précis, je vais plutôt tenter de présenter la vision que j&amp;rsquo;en ai ainsi que la façon dont je les ai compris.</description>
    </item>
    
  </channel>
</rss>
