<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>soa on Jetoile</title>
    <link>https://blog.jetoile.fr/tags/soa.html</link>
    <description>Recent content in soa on Jetoile</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#39;http://creativecommons.org/licenses/by/4.0/&#39; rel=&#39;license&#39;&gt;&lt;img alt=&#39;Licence Creative Commons&#39; src=&#39;https://blog.jetoile.fr/images/creative_common88x31.png&#39; style=&#39;border-width:0&#39;/&gt;&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 21 Nov 2012 15:12:51 +0100</lastBuildDate><atom:link href="https://blog.jetoile.fr/tags/soa/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Devoxx 2012 : Versionner son service dans une architecture SOA et/ou Cloud</title>
      <link>https://blog.jetoile.fr/2012/11/devoxx-2012-versionner-son-service-dans.html</link>
      <pubDate>Wed, 21 Nov 2012 15:12:51 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2012/11/devoxx-2012-versionner-son-service-dans.html</guid>
      <description>Ça y est&amp;hellip; Devoxx est fini&amp;hellip; :&#39;( Comme je l&amp;rsquo;ai dit dans un article précédent, je ne ferai pas de compte-rendu exhaustif de présentations auxquelles j&amp;rsquo;ai pu assisté à Devoxx.
Cependant, je tenais à revenir sur la présentation &amp;ldquo;Service Versioning in SOA and Cloud&amp;rdquo; par Ignaz Wanders (@ignazw) dont le synopsis était :
 Keeping versioning under control is essential in the success of a SOA. However, there are no industry standards for service versioning, thus leaving the responsibility of implementing a service versioning system up to the architects and developers within the IT enterprise.</description>
    </item>
    
    <item>
      <title>Découpage de projets : projet vs. modules</title>
      <link>https://blog.jetoile.fr/2012/08/decoupage-de-projets-projet-vs-modules.html</link>
      <pubDate>Tue, 28 Aug 2012 10:47:11 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2012/08/decoupage-de-projets-projet-vs-modules.html</guid>
      <description>Lorsqu&amp;rsquo;un projet débute, il est important (à mon avis) de se poser la question sur la façon dont celui-ci sera découpé. Pour être plus précis, il existe deux types d&amp;rsquo;approches :
 le découper fonctionnellement, le découper techniquement.  En outre, en plus de ce type de découpage, il est également important de s&amp;rsquo;interroger sur la façon dont il sera représenté dans le SCM : faut-il tout mettre dans le même projet (au sens SVN ou git du terme) en utilisant éventuellement des sous modules maven si c&amp;rsquo;est ce dernier qui est utilisé, ou faut-il en créer plusieurs?</description>
    </item>
    
    <item>
      <title>Présentation sur les problématiques liées à une architecture distribuée</title>
      <link>https://blog.jetoile.fr/2011/09/presentation-aux-problematiques-dune.html</link>
      <pubDate>Fri, 23 Sep 2011 22:17:00 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2011/09/presentation-aux-problematiques-dune.html</guid>
      <description>Ci-dessous se trouve une présentation que j&amp;rsquo;ai donné sur les problématiques liées aux architectures distribuées. Pour information, c&amp;rsquo;est un retour d&amp;rsquo;expérience d&amp;rsquo;une mission qui date un peu puisque c&amp;rsquo;était en 2007 mais les préconisations restent identiques à ce jour.
Enjoy et n&amp;rsquo;hésitez pas à commenter ;-)
Introduction sur les problématiques d&#39;une architecture distribuée  View more presentations from jetoile  </description>
    </item>
    
    <item>
      <title>Orchestration ou Routage?</title>
      <link>https://blog.jetoile.fr/2010/04/orchestration-ou-routage.html</link>
      <pubDate>Wed, 07 Apr 2010 10:55:20 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2010/04/orchestration-ou-routage.html</guid>
      <description>Orchestration ou routage? Telle est la question qui se pose souvent&amp;hellip; En effet, il est important de se poser la question sur la solution à adopter pour gérer, par exemple, des transformations ou du routage de messages dans un système asynchrone : s&amp;rsquo;agit-il de médiation technique ou de quelque chose de plus complexe (ie. de logique métier)?
PEtALS Link vient de mettre à disposition un livre blanc traitant du sujet en proposant différentes pistes pour choisir la solution d&amp;rsquo;implémentation.</description>
    </item>
    
    <item>
      <title>Spring Integration vs. Apache Camel</title>
      <link>https://blog.jetoile.fr/2010/03/spring-integration-vs-apache-camel.html</link>
      <pubDate>Mon, 15 Mar 2010 23:29:48 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2010/03/spring-integration-vs-apache-camel.html</guid>
      <description>Lors d&amp;rsquo;un post précédent, j&amp;rsquo;avais parlé des EIPs (Enterprise Integration Patterns) en expliquant qu&amp;rsquo;il s&amp;rsquo;agissait de Patterns permettant de normaliser les échanges de messages dans un système asynchrone.
Dans cet article, je vais tenter de présenter succinctement deux de ses implémentations : Spring Integration et [Apache Camel](https://camel.apache.org/.
En fait, pour être plus précis, je vais plutôt tenter de présenter la vision que j&amp;rsquo;en ai ainsi que la façon dont je les ai compris.</description>
    </item>
    
    <item>
      <title>EIP : Qu&#39;est ce que c&#39;est</title>
      <link>https://blog.jetoile.fr/2009/12/eip-quest-ce-que-cest.html</link>
      <pubDate>Sun, 13 Dec 2009 12:15:29 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2009/12/eip-quest-ce-que-cest.html</guid>
      <description>Dans l&amp;rsquo;article sur JBI, j&amp;rsquo;ai mentionné à de nombreuses reprises le terme EIP. Cet article revient sur cette notion que je considère comme étant très importante surtout lorsque l&amp;rsquo;on doit jongler avec des messages asynchrones.
En fait, les EIP (Enterprise Integration Patterns) sont issus de l&amp;rsquo;excellent livre éponyme de G. Hohpe et B. Woolf chez Addisson Wesley. Ne pouvant que vous recommandez sa lecture si vous trempez dans cette problématique, cet article ne sera qu&amp;rsquo;une brève introduction à son contenu (il fait quand même plus de 600 pages, donc je ne vais pas prétendre le résumer&amp;hellip; ;-)).</description>
    </item>
    
    <item>
      <title>JBI : Qu&#39;est ce que c&#39;est?</title>
      <link>https://blog.jetoile.fr/2009/12/jbi-une-solution-enterree.html</link>
      <pubDate>Mon, 07 Dec 2009 09:58:58 +0100</pubDate>
      
      <guid>https://blog.jetoile.fr/2009/12/jbi-une-solution-enterree.html</guid>
      <description>Voilà mon premier article. Il a pour objectif de présenter JBI (Java Business Service) aussi connue sous le doux nom de JSR 208 (Java Specification Release).
Pourquoi un article sur JBI? Vous pouvez vous demander pourquoi un article sur JBI? Les réponses sont simples : j&amp;rsquo;aime bien cette spécification et je trouve qu&amp;rsquo;elle a du potentiel et qu&amp;rsquo;elle est sous exploitée.
Bien sûr, me direz-vous, en tant qu&amp;rsquo;utilisateur d&amp;rsquo;un PEtALS ou ServiceMix, pourquoi devrais-je comprendre la technologie sous-jacente?</description>
    </item>
    
  </channel>
</rss>
